////////////////////////////////////
/////////// STREAMS VIEW ///////////
////////////////////////////////////
#streams-view.view {
	.view-inner {
		min-width: 100%;
		max-width: 100%;
	}
}
.stream {
	width: 100%;
	height: 100%;
	position: absolute;
	left: 0;
	top: 0;
	&:not(.show) {
		display: none;
	}
	@include sm-width {
		display: flex;
		flex-direction: column;
	}
}
.scenes-wrap {
	@include sm-width {
		width: 100%;
		flex: 1;
	}
}

.progress {
	width: 100%;
	background-color: rgba(255, 255, 255, 0.25);
	position: absolute;
	left: 0;
	top: 0;
	z-index: 80;
	transition: opacity 300ms $ease,
							transform 300ms $ease;
	body.alerts .stream &,
	.stream:not(.show) & {
		transform: translateY(-100px);
		@include md-width {
			transform: none;
		}
	}
	@include sm-width {
		top: 50px;
	}
}
.ticks-wrap {
	width: calc(100% - 200px);
	height: 14px;
	margin: auto;
	display: flex;
	justify-content: space-evenly;
	@include md-width {
		width: 100%;
	}
	@include sm-width {
		height: 10px;
	}
}
.tick {
	width: 14px;
	height: 14px;
	margin: 0 auto;
	background-color: white;
	opacity: .5;
	border-radius: 50%;
	position: relative;
	pointer-events: all;
	cursor: pointer;
	transition: opacity 300ms $ease;
	.tooltip {
		transform: translate(calc(-50% + 8px), 10px);
	}
	&:hover,
	&:hover .tooltip {
		opacity: 1;
	}
	&.active {
		opacity: 1;
	}
	@include sm-width {
		width: 10px;
		height: 10px;
	}
}

audio {
	display: none;
}

////////////////////////////////////
////////////// SCENES //////////////
////////////////////////////////////
.scene {
	width: 100%;
	height: 100%;
	left: 0;
	top: 0;
	position: absolute;
	z-index: 40;
	display: flex;
	user-select: none;
	transition: opacity 300ms $ease, background 300ms $ease;
	opacity: 0;
	pointer-events: none;
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
	display: flex;
	align-content: center;
	.svg-wrap {
		width: 100%;
		overflow: hidden;
		position: relative;
		&.width {
			display: flex;
			svg {
				width: 100% !important;
				height: auto !important;
				margin-top: calc(((100vw / 1.75) - 100vh) / -2) !important;
			}
		}
		&.height {
			svg {
				width: auto !important;
				height: 100% !important;
				margin-left: calc(((100vh * 1.75) - 100vw) / -2) !important;
			}
		}
		@include sm-width {
			&.width, &.height {
				height: 57vw !important;
				margin-top: 60px;
				svg {
					width: 100% !important;
					margin: auto !important;
				}
			}
		}
	}
	img {
		width: auto;
		height: 100%;
		display: block;
		margin: auto;
	}
	svg {
		height: unset;
		display: block;
		margin: auto;
	}
	body#streams &.show {
		opacity: 1;
		pointer-events: all;
	}
	&::before {
		content: "";
		width: 30px;
		height: 30px;
		border: 10px solid;
		border-color: white white transparent white;
		border-radius: 50%;
		position: absolute;
		left: calc(50% - 25px);
		top: calc(50% - 25px);
		z-index: 1;
		animation: loading 1s linear infinite;
		pointer-events: none;
		@include md-width {
			margin-top: -100px;
		}
		@include sm-width {
			margin-top: -25vh;
		}
	}
	&.loaded::before {
		opacity: 0;
	}
}

@keyframes loading {
	from {
		transform: rotate(0);
	}
	to {
		transform: rotate(360deg);
	}
}


////////////////////////////////////
///////////// CHYRONS //////////////
////////////////////////////////////
.lower-third {
	width: 100%;
	position: absolute;
	left: 0;
	bottom: 20px;
	z-index: 50;
	color: white;
	pointer-events: none;
	transform: translateY(calc(100% + 60px));
	transition: transform 300ms $ease;
	body#streams:not(.alerts) .stream:not(.ending).show & {
		transform: translateY(0);
		pointer-events: all;
	}
	@include md-width {
		bottom: 0;
	}
	@include sm-width {
		height: calc(100% - 57vw - 60px);
		position: static;
	}
}
.chyron-outer {
	width: calc(100% - 120px);
	max-width: $md-width;
	margin: auto;
	padding-left: 50px;
	position: relative;
	transition: opacity 300ms $ease;
	.alerts & {
		opacity: 0;
		pointer-events: none;
	}
	@include md-width {
		height: 100%;
		width: 100%;
		padding-left: 0;
	}
	@include sm-width {
		
	}
}
.chyron {
	width: 100%;
	margin: auto;
	@include md-width {
		height: 100%;
	}
}
.chyron-inner {
	width: 100%;
	min-height: 150px;
	border: 3px solid;
	border-radius: 30px 100px 100px 30px;
	background-color: $darken;
	transition: width 300ms $ease, max-height 300ms $ease;
	position: relative;
	@include md-width {
		height: 200px;
		border-width: 3px 0 0 0;
		border-radius: 0;
	}
	@include sm-width {
		height: 100%;
	}
	.portrait {
		position: absolute;
		width: 120px;
		height: 100%;
		display: flex;
		left: -60px;
		top: -4px;
		z-index: 51;
		img {
			width: 100%;
			display: block;
			margin: auto;
		}
		@include md-width {
			width: 80px;
			height: 80px;
			top: -30px;
			left: 10px;
		}
	}
}
.captions {
	height: 100%;
	min-height: 120px;
	@include md-width {
		clear: both;
	}
	.caption {
		padding: 20px 60px 20px 90px;
		text-align: left;
		overflow-y: auto;
		font-weight: 500;
		outline: none;
		@include md-width {
			height: 100%;
			padding: 8px 15px 20px 15px;
			overflow-y: scroll;
			-webkit-overflow-scroll: touch;
		}
		.text {
			@include lg-text;
			float: right;
			width: 100%;
			max-width: #{$md-width - $portrait-width};
			@include md-width {
				width: 100%;
				max-width: unset;
				&::before {
					content: "";
					width: 80px;
					height: 50px;
					display: block;
					float: left;
				}
			}
		}
		.vocab {
			border-bottom: 2px solid;
		}
		.vocab.clickable {
			cursor: pointer;
			transition: color 300ms $ease;
		}
		&:not(.show) {
			display: none;
		}
	}
}

.playback-toggle {
	width: 30px;
	height: 30px;
	position: absolute;
	right: 10px;
	top: calc(50% - 15px);
	background-image: url(../images/playback.svg);
	background-size: 30px;
	body.playing & {
		background-position-y: bottom;
	}
	@include md-width {
		width: 40px;
		height: 40px;
		margin: auto 10px;
		position: static;
	}
}

.arrow {
	width: 36px;
	height: 36px;
	position: absolute;
	top: calc(50% - 18px);
	opacity: 0.75;
	&:hover, &:focus {
		opacity: 1;
		cursor: pointer;
		outline: none;
	}
	&::before {
		content: "";
		width: 36px;
		height: 36px;
		background-image: url(../images/arrow.svg);
		background-repeat: no-repeat;
		background-position: center;
		background-size: contain;
		position: absolute;
		top: 0;
		left: 0;
		transition: transform 300ms $ease, opacity 300ms $ease;
		@include md-width {
			width: 30px;
			height: 30px;
		}
	}
	
	&[data-dir="prev"] {
		left: -57px;
		&::before {
			transform: rotate(90deg);
			@include md-width {
				body.alerts .stream &,
				.stream:not(.show) & {
					transform: translateX(-50vw) rotate(90deg);
				}
			}
		}
	}
	&[data-dir="next"] {
		right: -50px;
		&::before {
			transform: rotate(-90deg);
			@include md-width {
				body.alerts .stream &,
				.stream:not(.show) & {
					transform: translateX(50vw) rotate(-90deg);
				}
			}
		}
	}

	#streams-view & {
		@include md-width {
			width: 50vw;
			height: calc(100vh - 200px);
			position: absolute;
			top: unset;
			bottom: 100%;
			&::before {
				top: calc(50% - 18px);
			}
			&[data-dir="prev"] {
				left: 0;
				right: unset;
				&::before {
					left: 5px;
					right: auto;
				}
				&:hover::before {
					transform: rotate(90deg);
				}
			}
			&[data-dir="next"] {
				right: 0;
				left: unset;
				&::before {
					right: 5px;
					left: auto;
				}
				&:hover::before {
					transform: rotate(-90deg);
				}
			}
		}
		@include sm-width {
			height: 57vw;
			top: -57vw;
			bottom: unset;
		}
	}
}

$light-amt: 10%;
$lighter-amt: 30%;

.stream[data-slug="metal"] {
	.vocab {
		color: lighten($blue, $lighter-amt);
		border-color: $blue;
	}
	.factoid .vocab {
		color: lighten($blue, $lighter-amt);
	}
	.chyron-inner,
	.factoid-inner,
	.factoid-inner::before,
	.factoid-tab::before {
		border-color: $blue;
	}
}
.stream[data-slug="glass"] {
	.vocab {
		color: lighten($orange, $light-amt);
		border-color: $orange;
	}
	.factoid .vocab {
		color: lighten($orange, $light-amt);
	}
	.chyron-inner,
	.factoid-inner,
	.factoid-inner::before,
	.factoid-tab::before {
		border-color: $orange;
	}
}
.stream[data-slug="plastic"] {
	.vocab {
		color: lighten($red, $lighter-amt);
		border-color: $red;
	}
	.factoid .vocab {
		color: lighten($red, $lighter-amt);
	}
	.chyron-inner,
	.factoid-inner,
	.factoid-inner::before,
	.factoid-tab::before {
		border-color: $red;
	}
}
.stream[data-slug="paper"] {
	.vocab {
		color: lighten($green, $light-amt);
		border-color: $green;
	}
	.factoid .vocab {
		color: lighten($green, $light-amt);
	}
	.chyron-inner,
	.factoid-inner,
	.factoid-inner::before,
	.factoid-tab::before {
		border-color: $green;
	}
}
.stream[data-slug="landfill"] {
	.vocab {
		color: lighten($pink, $light-amt);
		border-color: $pink;
	}
	.factoid .vocab {
		color: lighten($pink, $light-amt);
	}
	.chyron-inner,
	.factoid-inner,
	.factoid-inner::before,
	.factoid-tab::before {
		border-color: $pink;
	}
}
.stream[data-slug="organics"] {
	.vocab {
		color: lighten($teal, $light-amt);
		border-color: $teal;
	}
	.factoid .vocab {
		color: lighten($teal, $light-amt);
	}
	.chyron-inner,
	.factoid-inner,
	.factoid-inner::before,
	.factoid-tab::before {
		border-color: $teal;
	}
}
////////////////////////////////////
///////////// FACTOIDS /////////////
////////////////////////////////////
.factoids {
	width: 100%;
	height: 100%;
	position: fixed;
	left: 100%;
	top: 0;
	display: flex;
	flex-direction: column;
	justify-content: center;
	outline: none;
	transition: opacity 300ms $ease;
	@include md-width {
		display: none;
	}
}
.factoid {
	width: 50%;
	min-width: 400px;
	max-width: 600px;
	margin: 0 0 15px 3px;
	position: relative;
	transition: transform 300ms $ease;
	transform: translateX(70px);
	.scene.show & {
		transform: none;
	}
	.scene.show &.open {
		transform: translateX(-100%);
	}
	.alerts & {
		transform: translateX(70px) !important;
	}
	&:focus {
		outline: none;
	}
}
.factoid-tab {
	height: 66px;
	width: 70px;
	position: absolute;
	left: -70px;
	top: 0;
	&:hover {
		cursor: pointer;
	}
	&::before {
		content: "";
		width: 70px;
		height: 60px;
		position: absolute;
		right: 0;
		top: 0;
		border-width: 3px 0 3px 3px;
		border-style: solid;
		border-radius: 60px 0 0 60px;
		background-color: $darken;
		overflow: hidden;
		transition: width 300ms $ease;
	}
	&::after {
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		right: 0;
		top: 0;
		opacity: .75;
		background-image: url(../images/plus.svg);
		background-position: center;
		background-size: 30px auto;
		background-repeat: no-repeat;
		transition: all 300ms $ease;
	}
	&:hover::after {
		opacity: 1;
	}
	.factoid:not(.open) &:hover::before,
	.factoid:not(.open):focus &::before {
		// width: 60px;
	}
	.factoid:not(.open) &:hover::after,
	.factoid:not(.open):focus &::after {
		// right: 15px;
	}
	.factoid.open &::after {
		transform: rotate(45deg);
	}
}
.factoid-inner {
	width: 100%;
	min-height: 80px;
	padding: 15px 20px 20px 20px;
	background-color: $darken;
	color: white;
	border-radius: 0 0 0 20px;
	position: relative;
	user-select: text;
	border-style: solid;
	border-width: 3px 0;
	.vocab {
		text-transform: capitalize;
		&::after {
			content: ": ";
			display: inline;
		}
	}
	p {
		@include lg-text;
		margin: 5px 0 0 0;
	}
	&::before {
		content: "";
    width: 100%;
    height: calc(100% - 60px);
    display: block;
    position: absolute;
    left: -3px;
    top: 60px;
    border-left: solid 3px;
    border-radius: 0 0 0 20px;
	}
}